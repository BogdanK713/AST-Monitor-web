-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;

CREATE TABLE IF NOT EXISTS public.api_integrations
(
    "integrationsID" serial NOT NULL,
    "apisID" integer NOT NULL,
    "usersID" integer NOT NULL,
    CONSTRAINT api_integrations_pkey PRIMARY KEY ("integrationsID")
);

CREATE TABLE IF NOT EXISTS public.apis
(
    "apisID" serial NOT NULL,
    provider character varying(255) COLLATE pg_catalog."default" NOT NULL,
    usage_info text COLLATE pg_catalog."default",
    CONSTRAINT apis_pkey PRIMARY KEY ("apisID")
);

CREATE TABLE IF NOT EXISTS public.coaches
(
    "coachID" serial NOT NULL,
    username character varying(50) COLLATE pg_catalog."default" NOT NULL,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    email character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT coaches_pkey PRIMARY KEY ("coachID"),
    CONSTRAINT coaches_email_unique UNIQUE (email),
    CONSTRAINT coaches_username_key UNIQUE (username)
);

CREATE TABLE IF NOT EXISTS public.cyclists
(
    "cyclistID" serial NOT NULL,
    "coachID" integer NOT NULL,
    username character varying(50) COLLATE pg_catalog."default" NOT NULL,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    email character varying(100) COLLATE pg_catalog."default" NOT NULL,
    date_of_birth date,
    height_cm integer,
    weight_kg integer,
    CONSTRAINT cyclists_pkey PRIMARY KEY ("cyclistID"),
    CONSTRAINT cyclists_email_unique UNIQUE (email),
    CONSTRAINT cyclists_username_key UNIQUE (username)
);

CREATE TABLE IF NOT EXISTS public.equipment
(
    "equipmentID" serial NOT NULL,
    type character varying(100) COLLATE pg_catalog."default" NOT NULL,
    model character varying(100) COLLATE pg_catalog."default" NOT NULL,
    compatible_with character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT equipment_pkey PRIMARY KEY ("equipmentID")
);

CREATE TABLE IF NOT EXISTS public.memberships
(
    "membershipsID" serial NOT NULL,
    "usersID" integer NOT NULL,
    "organizationsID" integer NOT NULL,
    CONSTRAINT memberships_pkey PRIMARY KEY ("membershipsID")
);

CREATE TABLE IF NOT EXISTS public.organizations
(
    "organizationsID" serial NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    type character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT organizations_pkey PRIMARY KEY ("organizationsID")
);

CREATE TABLE IF NOT EXISTS public.performance_metrics
(
    "metricsID" serial NOT NULL,
    "sessionsID" integer NOT NULL,
    heart_rate integer,
    speed numeric(5, 2),
    power_output numeric(5, 2),
    gps_data text COLLATE pg_catalog."default",
    CONSTRAINT performance_metrics_pkey PRIMARY KEY ("metricsID")
);

CREATE TABLE IF NOT EXISTS public.training_plans
(
    "plansID" serial NOT NULL,
    start_date date NOT NULL,
    end_date date NOT NULL,
    goal character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT training_plans_pkey PRIMARY KEY ("plansID")
);

CREATE TABLE IF NOT EXISTS public.training_sessions
(
    "sessionsID" serial NOT NULL,
    "cyclistID" integer NOT NULL,  -- Adding cyclistID for the relationship
    altitude_avg numeric,
    altitude_max numeric,
    altitude_min numeric,
    altitudes text COLLATE pg_catalog."default",
    ascent numeric,
    calories numeric,
    descent numeric,
    distance numeric,
    distances text COLLATE pg_catalog."default",
    duration interval,
    heartrates text COLLATE pg_catalog."default",
    hr_avg integer,
    hr_max integer,
    hr_min integer,
    positions text COLLATE pg_catalog."default",
    speeds text COLLATE pg_catalog."default",
    start_time timestamp,
    steps integer,
    timestamps text COLLATE pg_catalog."default",
    total_distance numeric,
    CONSTRAINT training_sessions_pkey PRIMARY KEY ("sessionsID")
);

CREATE TABLE IF NOT EXISTS public.user_equipment
(
    "user_equipmentID" serial NOT NULL,
    "cyclistID" integer NOT NULL,  -- Changing to cyclistID for consistency
    "equipmentID" integer NOT NULL,
    CONSTRAINT user_equipment_pkey PRIMARY KEY ("user_equipmentID")
);

ALTER TABLE IF EXISTS public.api_integrations
    ADD CONSTRAINT "api_integrations_apisID_fkey" FOREIGN KEY ("apisID")
    REFERENCES public.apis ("apisID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

ALTER TABLE IF EXISTS public.cyclists
    ADD CONSTRAINT fk_coach FOREIGN KEY ("coachID")
    REFERENCES public.coaches ("coachID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

ALTER TABLE IF EXISTS public.memberships
    ADD CONSTRAINT "memberships_organizationsID_fkey" FOREIGN KEY ("organizationsID")
    REFERENCES public.organizations ("organizationsID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

ALTER TABLE IF EXISTS public.performance_metrics
    ADD CONSTRAINT "performance_metrics_sessionsID_fkey" FOREIGN KEY ("sessionsID")
    REFERENCES public.training_sessions ("sessionsID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

ALTER TABLE IF EXISTS public.training_sessions
    ADD CONSTRAINT "training_sessions_cyclistID_fkey" FOREIGN KEY ("cyclistID")
    REFERENCES public.cyclists ("cyclistID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

ALTER TABLE IF EXISTS public.user_equipment
    ADD CONSTRAINT "user_equipment_cyclistID_fkey" FOREIGN KEY ("cyclistID")
    REFERENCES public.cyclists ("cyclistID") MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;

ALTER TABLE IF EXISTS public.user_equipment
    ADD CONSTRAINT "user_equipment_equipmentID_fkey" FOREIGN KEY ("equipmentID")
    REFERENCES public.equipment ("equipmentID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;
